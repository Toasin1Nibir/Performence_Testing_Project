/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 173.0, "minX": 0.0, "maxY": 16684.0, "series": [{"data": [[0.0, 173.0], [0.1, 174.0], [0.2, 174.0], [0.3, 175.0], [0.4, 175.0], [0.5, 176.0], [0.6, 176.0], [0.7, 177.0], [0.8, 177.0], [0.9, 177.0], [1.0, 178.0], [1.1, 178.0], [1.2, 178.0], [1.3, 179.0], [1.4, 179.0], [1.5, 180.0], [1.6, 180.0], [1.7, 181.0], [1.8, 181.0], [1.9, 182.0], [2.0, 182.0], [2.1, 183.0], [2.2, 183.0], [2.3, 184.0], [2.4, 184.0], [2.5, 185.0], [2.6, 185.0], [2.7, 186.0], [2.8, 186.0], [2.9, 187.0], [3.0, 187.0], [3.1, 188.0], [3.2, 188.0], [3.3, 189.0], [3.4, 189.0], [3.5, 190.0], [3.6, 190.0], [3.7, 190.0], [3.8, 191.0], [3.9, 191.0], [4.0, 192.0], [4.1, 192.0], [4.2, 192.0], [4.3, 193.0], [4.4, 193.0], [4.5, 194.0], [4.6, 194.0], [4.7, 195.0], [4.8, 195.0], [4.9, 196.0], [5.0, 196.0], [5.1, 197.0], [5.2, 198.0], [5.3, 198.0], [5.4, 199.0], [5.5, 199.0], [5.6, 200.0], [5.7, 200.0], [5.8, 201.0], [5.9, 201.0], [6.0, 202.0], [6.1, 202.0], [6.2, 203.0], [6.3, 204.0], [6.4, 204.0], [6.5, 204.0], [6.6, 205.0], [6.7, 206.0], [6.8, 207.0], [6.9, 208.0], [7.0, 208.0], [7.1, 209.0], [7.2, 210.0], [7.3, 210.0], [7.4, 211.0], [7.5, 212.0], [7.6, 212.0], [7.7, 213.0], [7.8, 214.0], [7.9, 214.0], [8.0, 216.0], [8.1, 217.0], [8.2, 218.0], [8.3, 218.0], [8.4, 219.0], [8.5, 220.0], [8.6, 221.0], [8.7, 222.0], [8.8, 223.0], [8.9, 223.0], [9.0, 224.0], [9.1, 225.0], [9.2, 226.0], [9.3, 228.0], [9.4, 229.0], [9.5, 230.0], [9.6, 231.0], [9.7, 232.0], [9.8, 233.0], [9.9, 234.0], [10.0, 236.0], [10.1, 237.0], [10.2, 238.0], [10.3, 239.0], [10.4, 240.0], [10.5, 240.0], [10.6, 243.0], [10.7, 244.0], [10.8, 245.0], [10.9, 245.0], [11.0, 246.0], [11.1, 248.0], [11.2, 250.0], [11.3, 251.0], [11.4, 253.0], [11.5, 255.0], [11.6, 257.0], [11.7, 258.0], [11.8, 261.0], [11.9, 262.0], [12.0, 263.0], [12.1, 265.0], [12.2, 267.0], [12.3, 268.0], [12.4, 270.0], [12.5, 272.0], [12.6, 273.0], [12.7, 275.0], [12.8, 276.0], [12.9, 279.0], [13.0, 280.0], [13.1, 282.0], [13.2, 283.0], [13.3, 285.0], [13.4, 286.0], [13.5, 287.0], [13.6, 289.0], [13.7, 291.0], [13.8, 293.0], [13.9, 294.0], [14.0, 296.0], [14.1, 297.0], [14.2, 299.0], [14.3, 300.0], [14.4, 302.0], [14.5, 303.0], [14.6, 305.0], [14.7, 306.0], [14.8, 307.0], [14.9, 308.0], [15.0, 310.0], [15.1, 311.0], [15.2, 312.0], [15.3, 314.0], [15.4, 315.0], [15.5, 316.0], [15.6, 317.0], [15.7, 318.0], [15.8, 319.0], [15.9, 320.0], [16.0, 320.0], [16.1, 321.0], [16.2, 322.0], [16.3, 323.0], [16.4, 325.0], [16.5, 326.0], [16.6, 327.0], [16.7, 329.0], [16.8, 330.0], [16.9, 331.0], [17.0, 332.0], [17.1, 333.0], [17.2, 334.0], [17.3, 335.0], [17.4, 337.0], [17.5, 338.0], [17.6, 340.0], [17.7, 342.0], [17.8, 344.0], [17.9, 347.0], [18.0, 349.0], [18.1, 351.0], [18.2, 354.0], [18.3, 356.0], [18.4, 358.0], [18.5, 361.0], [18.6, 364.0], [18.7, 367.0], [18.8, 373.0], [18.9, 381.0], [19.0, 388.0], [19.1, 394.0], [19.2, 404.0], [19.3, 413.0], [19.4, 417.0], [19.5, 425.0], [19.6, 430.0], [19.7, 433.0], [19.8, 437.0], [19.9, 443.0], [20.0, 446.0], [20.1, 450.0], [20.2, 456.0], [20.3, 462.0], [20.4, 466.0], [20.5, 468.0], [20.6, 471.0], [20.7, 473.0], [20.8, 477.0], [20.9, 478.0], [21.0, 482.0], [21.1, 485.0], [21.2, 488.0], [21.3, 493.0], [21.4, 497.0], [21.5, 499.0], [21.6, 504.0], [21.7, 508.0], [21.8, 514.0], [21.9, 519.0], [22.0, 521.0], [22.1, 526.0], [22.2, 530.0], [22.3, 535.0], [22.4, 540.0], [22.5, 544.0], [22.6, 549.0], [22.7, 553.0], [22.8, 557.0], [22.9, 562.0], [23.0, 567.0], [23.1, 571.0], [23.2, 572.0], [23.3, 574.0], [23.4, 576.0], [23.5, 578.0], [23.6, 581.0], [23.7, 584.0], [23.8, 587.0], [23.9, 589.0], [24.0, 591.0], [24.1, 595.0], [24.2, 597.0], [24.3, 599.0], [24.4, 602.0], [24.5, 605.0], [24.6, 609.0], [24.7, 612.0], [24.8, 618.0], [24.9, 624.0], [25.0, 631.0], [25.1, 638.0], [25.2, 644.0], [25.3, 652.0], [25.4, 660.0], [25.5, 671.0], [25.6, 676.0], [25.7, 680.0], [25.8, 691.0], [25.9, 696.0], [26.0, 705.0], [26.1, 709.0], [26.2, 717.0], [26.3, 721.0], [26.4, 728.0], [26.5, 733.0], [26.6, 736.0], [26.7, 740.0], [26.8, 744.0], [26.9, 747.0], [27.0, 750.0], [27.1, 752.0], [27.2, 755.0], [27.3, 759.0], [27.4, 763.0], [27.5, 766.0], [27.6, 768.0], [27.7, 770.0], [27.8, 774.0], [27.9, 780.0], [28.0, 784.0], [28.1, 788.0], [28.2, 793.0], [28.3, 798.0], [28.4, 800.0], [28.5, 803.0], [28.6, 807.0], [28.7, 812.0], [28.8, 815.0], [28.9, 819.0], [29.0, 825.0], [29.1, 827.0], [29.2, 832.0], [29.3, 837.0], [29.4, 841.0], [29.5, 843.0], [29.6, 845.0], [29.7, 848.0], [29.8, 853.0], [29.9, 856.0], [30.0, 858.0], [30.1, 861.0], [30.2, 867.0], [30.3, 869.0], [30.4, 875.0], [30.5, 880.0], [30.6, 885.0], [30.7, 889.0], [30.8, 895.0], [30.9, 899.0], [31.0, 906.0], [31.1, 913.0], [31.2, 918.0], [31.3, 921.0], [31.4, 925.0], [31.5, 929.0], [31.6, 931.0], [31.7, 936.0], [31.8, 940.0], [31.9, 943.0], [32.0, 949.0], [32.1, 956.0], [32.2, 964.0], [32.3, 970.0], [32.4, 975.0], [32.5, 978.0], [32.6, 985.0], [32.7, 990.0], [32.8, 994.0], [32.9, 1000.0], [33.0, 1005.0], [33.1, 1011.0], [33.2, 1015.0], [33.3, 1021.0], [33.4, 1025.0], [33.5, 1033.0], [33.6, 1042.0], [33.7, 1049.0], [33.8, 1055.0], [33.9, 1061.0], [34.0, 1069.0], [34.1, 1074.0], [34.2, 1078.0], [34.3, 1085.0], [34.4, 1089.0], [34.5, 1097.0], [34.6, 1106.0], [34.7, 1113.0], [34.8, 1118.0], [34.9, 1124.0], [35.0, 1128.0], [35.1, 1136.0], [35.2, 1140.0], [35.3, 1144.0], [35.4, 1149.0], [35.5, 1156.0], [35.6, 1161.0], [35.7, 1167.0], [35.8, 1171.0], [35.9, 1179.0], [36.0, 1183.0], [36.1, 1188.0], [36.2, 1191.0], [36.3, 1195.0], [36.4, 1199.0], [36.5, 1203.0], [36.6, 1208.0], [36.7, 1210.0], [36.8, 1213.0], [36.9, 1217.0], [37.0, 1222.0], [37.1, 1226.0], [37.2, 1229.0], [37.3, 1232.0], [37.4, 1235.0], [37.5, 1239.0], [37.6, 1243.0], [37.7, 1246.0], [37.8, 1247.0], [37.9, 1250.0], [38.0, 1252.0], [38.1, 1255.0], [38.2, 1257.0], [38.3, 1259.0], [38.4, 1261.0], [38.5, 1265.0], [38.6, 1267.0], [38.7, 1270.0], [38.8, 1273.0], [38.9, 1276.0], [39.0, 1279.0], [39.1, 1284.0], [39.2, 1288.0], [39.3, 1289.0], [39.4, 1291.0], [39.5, 1295.0], [39.6, 1296.0], [39.7, 1301.0], [39.8, 1303.0], [39.9, 1307.0], [40.0, 1310.0], [40.1, 1313.0], [40.2, 1314.0], [40.3, 1318.0], [40.4, 1320.0], [40.5, 1322.0], [40.6, 1325.0], [40.7, 1329.0], [40.8, 1331.0], [40.9, 1336.0], [41.0, 1339.0], [41.1, 1342.0], [41.2, 1345.0], [41.3, 1348.0], [41.4, 1350.0], [41.5, 1356.0], [41.6, 1358.0], [41.7, 1360.0], [41.8, 1366.0], [41.9, 1370.0], [42.0, 1374.0], [42.1, 1378.0], [42.2, 1382.0], [42.3, 1386.0], [42.4, 1389.0], [42.5, 1392.0], [42.6, 1395.0], [42.7, 1398.0], [42.8, 1403.0], [42.9, 1408.0], [43.0, 1411.0], [43.1, 1416.0], [43.2, 1421.0], [43.3, 1427.0], [43.4, 1436.0], [43.5, 1439.0], [43.6, 1447.0], [43.7, 1453.0], [43.8, 1458.0], [43.9, 1464.0], [44.0, 1476.0], [44.1, 1481.0], [44.2, 1491.0], [44.3, 1505.0], [44.4, 1515.0], [44.5, 1522.0], [44.6, 1530.0], [44.7, 1540.0], [44.8, 1548.0], [44.9, 1556.0], [45.0, 1567.0], [45.1, 1579.0], [45.2, 1587.0], [45.3, 1598.0], [45.4, 1604.0], [45.5, 1614.0], [45.6, 1618.0], [45.7, 1623.0], [45.8, 1628.0], [45.9, 1632.0], [46.0, 1640.0], [46.1, 1648.0], [46.2, 1657.0], [46.3, 1665.0], [46.4, 1670.0], [46.5, 1673.0], [46.6, 1682.0], [46.7, 1689.0], [46.8, 1694.0], [46.9, 1701.0], [47.0, 1707.0], [47.1, 1715.0], [47.2, 1722.0], [47.3, 1730.0], [47.4, 1738.0], [47.5, 1749.0], [47.6, 1756.0], [47.7, 1764.0], [47.8, 1771.0], [47.9, 1784.0], [48.0, 1795.0], [48.1, 1808.0], [48.2, 1820.0], [48.3, 1826.0], [48.4, 1833.0], [48.5, 1847.0], [48.6, 1859.0], [48.7, 1865.0], [48.8, 1871.0], [48.9, 1883.0], [49.0, 1888.0], [49.1, 1896.0], [49.2, 1906.0], [49.3, 1911.0], [49.4, 1917.0], [49.5, 1924.0], [49.6, 1929.0], [49.7, 1942.0], [49.8, 1949.0], [49.9, 1958.0], [50.0, 1968.0], [50.1, 1973.0], [50.2, 1981.0], [50.3, 1989.0], [50.4, 2001.0], [50.5, 2010.0], [50.6, 2021.0], [50.7, 2026.0], [50.8, 2034.0], [50.9, 2039.0], [51.0, 2051.0], [51.1, 2064.0], [51.2, 2070.0], [51.3, 2080.0], [51.4, 2087.0], [51.5, 2097.0], [51.6, 2100.0], [51.7, 2107.0], [51.8, 2115.0], [51.9, 2126.0], [52.0, 2132.0], [52.1, 2145.0], [52.2, 2158.0], [52.3, 2167.0], [52.4, 2176.0], [52.5, 2185.0], [52.6, 2191.0], [52.7, 2199.0], [52.8, 2207.0], [52.9, 2220.0], [53.0, 2223.0], [53.1, 2237.0], [53.2, 2242.0], [53.3, 2253.0], [53.4, 2258.0], [53.5, 2268.0], [53.6, 2278.0], [53.7, 2288.0], [53.8, 2303.0], [53.9, 2317.0], [54.0, 2327.0], [54.1, 2345.0], [54.2, 2363.0], [54.3, 2381.0], [54.4, 2399.0], [54.5, 2406.0], [54.6, 2420.0], [54.7, 2438.0], [54.8, 2445.0], [54.9, 2453.0], [55.0, 2466.0], [55.1, 2480.0], [55.2, 2492.0], [55.3, 2507.0], [55.4, 2521.0], [55.5, 2530.0], [55.6, 2537.0], [55.7, 2546.0], [55.8, 2557.0], [55.9, 2566.0], [56.0, 2573.0], [56.1, 2584.0], [56.2, 2598.0], [56.3, 2607.0], [56.4, 2613.0], [56.5, 2627.0], [56.6, 2635.0], [56.7, 2645.0], [56.8, 2650.0], [56.9, 2656.0], [57.0, 2662.0], [57.1, 2671.0], [57.2, 2679.0], [57.3, 2687.0], [57.4, 2695.0], [57.5, 2700.0], [57.6, 2704.0], [57.7, 2713.0], [57.8, 2718.0], [57.9, 2724.0], [58.0, 2734.0], [58.1, 2741.0], [58.2, 2748.0], [58.3, 2759.0], [58.4, 2769.0], [58.5, 2778.0], [58.6, 2794.0], [58.7, 2808.0], [58.8, 2813.0], [58.9, 2820.0], [59.0, 2827.0], [59.1, 2843.0], [59.2, 2855.0], [59.3, 2859.0], [59.4, 2864.0], [59.5, 2876.0], [59.6, 2885.0], [59.7, 2891.0], [59.8, 2900.0], [59.9, 2905.0], [60.0, 2909.0], [60.1, 2916.0], [60.2, 2924.0], [60.3, 2931.0], [60.4, 2943.0], [60.5, 2949.0], [60.6, 2959.0], [60.7, 2965.0], [60.8, 2969.0], [60.9, 2979.0], [61.0, 2984.0], [61.1, 2995.0], [61.2, 3005.0], [61.3, 3019.0], [61.4, 3030.0], [61.5, 3034.0], [61.6, 3040.0], [61.7, 3048.0], [61.8, 3055.0], [61.9, 3067.0], [62.0, 3083.0], [62.1, 3095.0], [62.2, 3102.0], [62.3, 3110.0], [62.4, 3122.0], [62.5, 3126.0], [62.6, 3134.0], [62.7, 3142.0], [62.8, 3153.0], [62.9, 3159.0], [63.0, 3167.0], [63.1, 3175.0], [63.2, 3184.0], [63.3, 3191.0], [63.4, 3202.0], [63.5, 3208.0], [63.6, 3211.0], [63.7, 3223.0], [63.8, 3230.0], [63.9, 3236.0], [64.0, 3243.0], [64.1, 3248.0], [64.2, 3254.0], [64.3, 3260.0], [64.4, 3264.0], [64.5, 3273.0], [64.6, 3281.0], [64.7, 3291.0], [64.8, 3305.0], [64.9, 3321.0], [65.0, 3326.0], [65.1, 3338.0], [65.2, 3348.0], [65.3, 3358.0], [65.4, 3368.0], [65.5, 3380.0], [65.6, 3389.0], [65.7, 3403.0], [65.8, 3416.0], [65.9, 3426.0], [66.0, 3447.0], [66.1, 3454.0], [66.2, 3460.0], [66.3, 3472.0], [66.4, 3486.0], [66.5, 3500.0], [66.6, 3519.0], [66.7, 3533.0], [66.8, 3544.0], [66.9, 3559.0], [67.0, 3573.0], [67.1, 3589.0], [67.2, 3598.0], [67.3, 3611.0], [67.4, 3634.0], [67.5, 3643.0], [67.6, 3651.0], [67.7, 3664.0], [67.8, 3681.0], [67.9, 3686.0], [68.0, 3693.0], [68.1, 3698.0], [68.2, 3705.0], [68.3, 3712.0], [68.4, 3716.0], [68.5, 3721.0], [68.6, 3727.0], [68.7, 3731.0], [68.8, 3746.0], [68.9, 3770.0], [69.0, 3784.0], [69.1, 3806.0], [69.2, 3823.0], [69.3, 3836.0], [69.4, 3851.0], [69.5, 3866.0], [69.6, 3876.0], [69.7, 3896.0], [69.8, 3914.0], [69.9, 3929.0], [70.0, 3944.0], [70.1, 3955.0], [70.2, 3962.0], [70.3, 3979.0], [70.4, 3993.0], [70.5, 4006.0], [70.6, 4018.0], [70.7, 4033.0], [70.8, 4044.0], [70.9, 4065.0], [71.0, 4075.0], [71.1, 4087.0], [71.2, 4105.0], [71.3, 4123.0], [71.4, 4141.0], [71.5, 4164.0], [71.6, 4185.0], [71.7, 4205.0], [71.8, 4216.0], [71.9, 4233.0], [72.0, 4249.0], [72.1, 4268.0], [72.2, 4287.0], [72.3, 4303.0], [72.4, 4309.0], [72.5, 4322.0], [72.6, 4339.0], [72.7, 4358.0], [72.8, 4369.0], [72.9, 4391.0], [73.0, 4407.0], [73.1, 4425.0], [73.2, 4432.0], [73.3, 4447.0], [73.4, 4465.0], [73.5, 4483.0], [73.6, 4493.0], [73.7, 4508.0], [73.8, 4520.0], [73.9, 4529.0], [74.0, 4537.0], [74.1, 4551.0], [74.2, 4563.0], [74.3, 4580.0], [74.4, 4589.0], [74.5, 4605.0], [74.6, 4630.0], [74.7, 4640.0], [74.8, 4647.0], [74.9, 4658.0], [75.0, 4684.0], [75.1, 4695.0], [75.2, 4712.0], [75.3, 4725.0], [75.4, 4739.0], [75.5, 4769.0], [75.6, 4797.0], [75.7, 4814.0], [75.8, 4826.0], [75.9, 4846.0], [76.0, 4854.0], [76.1, 4865.0], [76.2, 4875.0], [76.3, 4887.0], [76.4, 4914.0], [76.5, 4937.0], [76.6, 4961.0], [76.7, 4985.0], [76.8, 5010.0], [76.9, 5029.0], [77.0, 5045.0], [77.1, 5076.0], [77.2, 5094.0], [77.3, 5105.0], [77.4, 5145.0], [77.5, 5152.0], [77.6, 5167.0], [77.7, 5187.0], [77.8, 5209.0], [77.9, 5220.0], [78.0, 5237.0], [78.1, 5257.0], [78.2, 5268.0], [78.3, 5275.0], [78.4, 5282.0], [78.5, 5293.0], [78.6, 5303.0], [78.7, 5317.0], [78.8, 5333.0], [78.9, 5350.0], [79.0, 5361.0], [79.1, 5379.0], [79.2, 5391.0], [79.3, 5401.0], [79.4, 5415.0], [79.5, 5441.0], [79.6, 5457.0], [79.7, 5471.0], [79.8, 5489.0], [79.9, 5523.0], [80.0, 5547.0], [80.1, 5582.0], [80.2, 5598.0], [80.3, 5629.0], [80.4, 5652.0], [80.5, 5663.0], [80.6, 5676.0], [80.7, 5709.0], [80.8, 5735.0], [80.9, 5768.0], [81.0, 5781.0], [81.1, 5816.0], [81.2, 5849.0], [81.3, 5889.0], [81.4, 5908.0], [81.5, 5921.0], [81.6, 5964.0], [81.7, 6005.0], [81.8, 6031.0], [81.9, 6050.0], [82.0, 6068.0], [82.1, 6093.0], [82.2, 6112.0], [82.3, 6140.0], [82.4, 6174.0], [82.5, 6236.0], [82.6, 6260.0], [82.7, 6281.0], [82.8, 6316.0], [82.9, 6339.0], [83.0, 6360.0], [83.1, 6383.0], [83.2, 6395.0], [83.3, 6427.0], [83.4, 6452.0], [83.5, 6474.0], [83.6, 6497.0], [83.7, 6533.0], [83.8, 6568.0], [83.9, 6592.0], [84.0, 6612.0], [84.1, 6630.0], [84.2, 6649.0], [84.3, 6667.0], [84.4, 6699.0], [84.5, 6724.0], [84.6, 6748.0], [84.7, 6773.0], [84.8, 6808.0], [84.9, 6838.0], [85.0, 6865.0], [85.1, 6892.0], [85.2, 6926.0], [85.3, 6951.0], [85.4, 6984.0], [85.5, 7008.0], [85.6, 7042.0], [85.7, 7073.0], [85.8, 7099.0], [85.9, 7134.0], [86.0, 7165.0], [86.1, 7200.0], [86.2, 7245.0], [86.3, 7299.0], [86.4, 7325.0], [86.5, 7361.0], [86.6, 7375.0], [86.7, 7408.0], [86.8, 7449.0], [86.9, 7473.0], [87.0, 7499.0], [87.1, 7539.0], [87.2, 7562.0], [87.3, 7610.0], [87.4, 7634.0], [87.5, 7682.0], [87.6, 7730.0], [87.7, 7770.0], [87.8, 7814.0], [87.9, 7855.0], [88.0, 7897.0], [88.1, 7919.0], [88.2, 7977.0], [88.3, 8008.0], [88.4, 8039.0], [88.5, 8099.0], [88.6, 8121.0], [88.7, 8149.0], [88.8, 8199.0], [88.9, 8228.0], [89.0, 8245.0], [89.1, 8267.0], [89.2, 8291.0], [89.3, 8325.0], [89.4, 8367.0], [89.5, 8407.0], [89.6, 8444.0], [89.7, 8477.0], [89.8, 8500.0], [89.9, 8512.0], [90.0, 8555.0], [90.1, 8585.0], [90.2, 8611.0], [90.3, 8648.0], [90.4, 8682.0], [90.5, 8723.0], [90.6, 8756.0], [90.7, 8797.0], [90.8, 8833.0], [90.9, 8863.0], [91.0, 8894.0], [91.1, 8930.0], [91.2, 8955.0], [91.3, 8977.0], [91.4, 9011.0], [91.5, 9042.0], [91.6, 9065.0], [91.7, 9104.0], [91.8, 9135.0], [91.9, 9166.0], [92.0, 9190.0], [92.1, 9200.0], [92.2, 9209.0], [92.3, 9226.0], [92.4, 9235.0], [92.5, 9247.0], [92.6, 9253.0], [92.7, 9264.0], [92.8, 9283.0], [92.9, 9307.0], [93.0, 9328.0], [93.1, 9357.0], [93.2, 9370.0], [93.3, 9402.0], [93.4, 9418.0], [93.5, 9452.0], [93.6, 9474.0], [93.7, 9506.0], [93.8, 9542.0], [93.9, 9569.0], [94.0, 9614.0], [94.1, 9640.0], [94.2, 9674.0], [94.3, 9708.0], [94.4, 9728.0], [94.5, 9780.0], [94.6, 9798.0], [94.7, 9837.0], [94.8, 9872.0], [94.9, 9918.0], [95.0, 9947.0], [95.1, 9964.0], [95.2, 10000.0], [95.3, 10036.0], [95.4, 10058.0], [95.5, 10107.0], [95.6, 10136.0], [95.7, 10178.0], [95.8, 10223.0], [95.9, 10255.0], [96.0, 10305.0], [96.1, 10329.0], [96.2, 10382.0], [96.3, 10410.0], [96.4, 10464.0], [96.5, 10499.0], [96.6, 10518.0], [96.7, 10544.0], [96.8, 10588.0], [96.9, 10613.0], [97.0, 10669.0], [97.1, 10707.0], [97.2, 10744.0], [97.3, 10778.0], [97.4, 10846.0], [97.5, 10868.0], [97.6, 10907.0], [97.7, 10962.0], [97.8, 10988.0], [97.9, 11049.0], [98.0, 11105.0], [98.1, 11134.0], [98.2, 11186.0], [98.3, 11226.0], [98.4, 11288.0], [98.5, 11353.0], [98.6, 11389.0], [98.7, 11431.0], [98.8, 11528.0], [98.9, 11584.0], [99.0, 11620.0], [99.1, 11692.0], [99.2, 11776.0], [99.3, 11817.0], [99.4, 11884.0], [99.5, 11947.0], [99.6, 11997.0], [99.7, 12076.0], [99.8, 12167.0], [99.9, 12435.0], [100.0, 16684.0]], "isOverall": false, "label": "getUser", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 914.0, "series": [{"data": [[100.0, 580.0], [200.0, 914.0], [300.0, 518.0], [400.0, 248.0], [500.0, 295.0], [600.0, 168.0], [700.0, 256.0], [800.0, 266.0], [900.0, 209.0], [1000.0, 172.0], [1100.0, 197.0], [1200.0, 341.0], [1300.0, 322.0], [1400.0, 160.0], [1500.0, 114.0], [1600.0, 164.0], [1700.0, 116.0], [1800.0, 120.0], [1900.0, 131.0], [2000.0, 124.0], [2100.0, 119.0], [2300.0, 69.0], [2200.0, 110.0], [2400.0, 89.0], [2500.0, 100.0], [2600.0, 135.0], [2800.0, 119.0], [2700.0, 119.0], [2900.0, 144.0], [3000.0, 108.0], [3100.0, 127.0], [3300.0, 96.0], [3200.0, 144.0], [3400.0, 88.0], [3500.0, 74.0], [3600.0, 96.0], [3700.0, 99.0], [3800.0, 69.0], [3900.0, 76.0], [4000.0, 76.0], [4100.0, 53.0], [4300.0, 73.0], [4200.0, 63.0], [4600.0, 67.0], [4400.0, 72.0], [4500.0, 87.0], [4800.0, 78.0], [4700.0, 51.0], [5100.0, 51.0], [4900.0, 42.0], [5000.0, 55.0], [5200.0, 85.0], [5300.0, 76.0], [5400.0, 57.0], [5500.0, 40.0], [5600.0, 47.0], [5700.0, 42.0], [5800.0, 32.0], [6000.0, 46.0], [5900.0, 35.0], [6100.0, 31.0], [6300.0, 48.0], [6200.0, 35.0], [6500.0, 35.0], [6600.0, 49.0], [6400.0, 41.0], [6800.0, 37.0], [6700.0, 37.0], [6900.0, 35.0], [7000.0, 37.0], [7100.0, 31.0], [7400.0, 36.0], [7200.0, 22.0], [7300.0, 37.0], [7500.0, 31.0], [7600.0, 25.0], [7700.0, 23.0], [7900.0, 27.0], [7800.0, 28.0], [8100.0, 32.0], [8000.0, 24.0], [8600.0, 29.0], [8500.0, 41.0], [8700.0, 28.0], [8400.0, 32.0], [8300.0, 27.0], [8200.0, 43.0], [8900.0, 38.0], [8800.0, 30.0], [9100.0, 42.0], [9000.0, 35.0], [9200.0, 84.0], [9300.0, 41.0], [9600.0, 35.0], [9400.0, 43.0], [9700.0, 33.0], [9500.0, 27.0], [9900.0, 35.0], [10000.0, 33.0], [10200.0, 24.0], [9800.0, 26.0], [10100.0, 27.0], [10300.0, 30.0], [10400.0, 25.0], [10500.0, 39.0], [10700.0, 28.0], [10600.0, 22.0], [10800.0, 23.0], [10900.0, 27.0], [11000.0, 15.0], [11100.0, 28.0], [11200.0, 19.0], [11300.0, 20.0], [11400.0, 17.0], [11700.0, 16.0], [11600.0, 17.0], [11500.0, 18.0], [11800.0, 15.0], [11900.0, 21.0], [12000.0, 12.0], [12100.0, 10.0], [12200.0, 4.0], [12300.0, 5.0], [12400.0, 3.0], [13300.0, 1.0], [12900.0, 3.0], [13000.0, 1.0], [13800.0, 1.0], [13600.0, 1.0], [16600.0, 1.0]], "isOverall": false, "label": "getUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5853.0, "series": [{"data": [[0.0, 2261.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2385.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5853.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 312.31399999999996, "minX": 1.6487559E12, "maxY": 1261.359199999998, "series": [{"data": [[1.64875692E12, 312.31399999999996], [1.6487559E12, 1261.359199999998], [1.6490841E12, 969.580333333332], [1.64875776E12, 617.5559999999994]], "isOverall": false, "label": "MyFirstTestPlanForBatch9", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6490841E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 222.16666666666669, "minX": 1.0, "maxY": 11665.0, "series": [{"data": [[2.0, 6379.333333333333], [3.0, 6090.25], [4.0, 3501.8], [5.0, 4257.0], [6.0, 4972.6], [7.0, 5509.75], [8.0, 4323.25], [9.0, 4332.5], [10.0, 4197.333333333333], [11.0, 7242.8], [12.0, 5515.25], [13.0, 5339.0], [14.0, 6263.5], [15.0, 6786.8], [16.0, 4266.666666666667], [17.0, 6716.75], [18.0, 5523.25], [19.0, 3978.3333333333335], [20.0, 3471.3333333333335], [21.0, 1711.5], [22.0, 7234.75], [23.0, 8250.333333333334], [24.0, 4966.0], [25.0, 3950.0000000000005], [26.0, 4230.0], [27.0, 6328.75], [28.0, 6086.4], [29.0, 4213.333333333333], [30.0, 4889.5], [31.0, 5657.4], [33.0, 3989.3333333333335], [32.0, 5197.666666666667], [34.0, 7793.4], [35.0, 5222.0], [37.0, 8329.8], [36.0, 3905.3333333333335], [39.0, 10221.666666666666], [38.0, 3637.75], [40.0, 5384.166666666667], [41.0, 3779.666666666667], [43.0, 1390.0000000000005], [42.0, 4471.25], [45.0, 513.734693877551], [44.0, 909.3793103448276], [47.0, 468.0227272727275], [46.0, 458.93975903614455], [48.0, 456.47619047619037], [49.0, 477.9019607843137], [50.0, 1022.7317073170734], [51.0, 670.2727272727273], [53.0, 1297.3125], [52.0, 960.8571428571429], [55.0, 2238.428571428571], [54.0, 2431.222222222222], [57.0, 1205.2222222222222], [56.0, 1085.8125], [59.0, 1758.25], [58.0, 1598.1538461538462], [61.0, 2491.3], [60.0, 3570.75], [62.0, 1725.0714285714287], [63.0, 862.5], [66.0, 2304.375], [65.0, 2366.1], [67.0, 1971.375], [64.0, 1307.6666666666667], [71.0, 3663.6666666666665], [69.0, 2615.1428571428573], [68.0, 2113.846153846154], [70.0, 1115.25], [74.0, 1420.2], [72.0, 1656.909090909091], [75.0, 1866.7], [73.0, 2041.375], [78.0, 3209.8888888888887], [77.0, 3027.0], [76.0, 2918.3000000000006], [79.0, 1169.4], [82.0, 2568.8333333333335], [80.0, 3121.250000000001], [81.0, 1413.7333333333333], [83.0, 887.7142857142858], [87.0, 1314.2631578947369], [86.0, 1371.6875], [85.0, 820.8260869565216], [84.0, 1115.090909090909], [89.0, 3166.0], [88.0, 1431.166666666667], [91.0, 1673.2857142857142], [90.0, 2303.7], [94.0, 2377.5833333333335], [93.0, 4383.2], [92.0, 2417.875], [95.0, 2516.0], [98.0, 3902.5555555555557], [96.0, 5809.0], [97.0, 2987.666666666667], [99.0, 1704.6], [101.0, 6551.714285714286], [102.0, 5238.0], [100.0, 2541.6], [103.0, 6014.5], [107.0, 7599.666666666666], [106.0, 2931.25], [105.0, 2108.0], [104.0, 6427.5], [111.0, 4660.25], [110.0, 3863.75], [108.0, 3807.714285714286], [109.0, 5448.666666666667], [115.0, 2070.6], [113.0, 2902.0], [114.0, 2248.3333333333335], [112.0, 4404.0], [117.0, 4389.25], [119.0, 3168.3333333333335], [118.0, 3048.5], [116.0, 2377.75], [122.0, 4444.333333333333], [121.0, 4305.5], [120.0, 6319.8], [123.0, 1992.0000000000002], [126.0, 5047.6], [124.0, 3450.6], [127.0, 5633.333333333333], [125.0, 4617.666666666667], [135.0, 4139.333333333333], [131.0, 6557.0], [130.0, 4647.857142857142], [133.0, 3408.0], [132.0, 2345.6666666666665], [129.0, 2927.0], [128.0, 4702.666666666667], [134.0, 5051.333333333333], [143.0, 4970.5], [142.0, 3587.0], [140.0, 5125.8], [138.0, 5944.166666666666], [141.0, 4490.666666666667], [139.0, 5614.333333333333], [137.0, 1425.75], [136.0, 1999.5], [150.0, 1857.5], [149.0, 2448.833333333333], [147.0, 8167.666666666667], [146.0, 3952.6], [145.0, 2436.5], [144.0, 4530.2], [151.0, 4069.4], [148.0, 3844.6], [159.0, 3102.5], [158.0, 3104.0], [156.0, 3983.0], [155.0, 2343.1111111111113], [152.0, 1976.230769230769], [157.0, 3334.428571428571], [154.0, 2909.0], [153.0, 1448.1428571428573], [166.0, 3421.25], [165.0, 3021.875], [163.0, 3022.0], [162.0, 5444.6], [160.0, 3906.0], [167.0, 2119.25], [164.0, 1920.25], [161.0, 1720.0], [174.0, 2161.5], [173.0, 1431.7142857142856], [172.0, 2468.3333333333335], [171.0, 3233.6666666666665], [170.0, 2362.25], [168.0, 3033.666666666667], [175.0, 2733.0], [169.0, 2380.3333333333335], [183.0, 4227.0], [181.0, 2173.857142857143], [179.0, 2924.5], [176.0, 3197.0], [182.0, 1042.5], [178.0, 1949.0], [177.0, 2900.25], [180.0, 4207.0], [191.0, 3548.75], [190.0, 5350.4], [188.0, 1865.0], [187.0, 2335.0], [186.0, 1913.0], [184.0, 3148.75], [189.0, 2818.6], [185.0, 2167.2], [199.0, 2650.6666666666665], [196.0, 3005.5], [195.0, 4712.8], [194.0, 3251.0], [192.0, 4866.5], [198.0, 782.5], [197.0, 1950.0], [193.0, 3070.5], [207.0, 2931.8], [206.0, 2971.3333333333335], [205.0, 3056.714285714286], [204.0, 3380.1111111111113], [202.0, 1706.4], [201.0, 3959.833333333333], [203.0, 1836.8333333333333], [200.0, 2151.25], [215.0, 2761.4166666666665], [214.0, 1873.625], [212.0, 2954.5], [211.0, 1625.2857142857142], [210.0, 1258.4], [209.0, 1749.2], [208.0, 1139.1666666666665], [213.0, 1206.7777777777778], [223.0, 3546.5714285714284], [221.0, 3336.5], [219.0, 4014.0], [218.0, 1564.5000000000002], [217.0, 3294.1111111111113], [222.0, 3605.333333333333], [220.0, 1609.6666666666667], [216.0, 1621.857142857143], [229.0, 4121.75], [228.0, 5801.5], [227.0, 2459.25], [225.0, 3618.4], [224.0, 3589.75], [231.0, 2121.8], [230.0, 734.0], [226.0, 1511.0], [238.0, 6886.5], [237.0, 3254.1], [236.0, 1854.2500000000002], [232.0, 3592.0], [234.0, 1010.6666666666666], [233.0, 1140.5], [239.0, 4078.0], [235.0, 5816.333333333334], [247.0, 2914.4], [245.0, 1905.25], [246.0, 1893.0], [242.0, 4201.666666666667], [241.0, 2133.4], [240.0, 2538.8571428571427], [244.0, 3619.1666666666665], [243.0, 376.0], [254.0, 4132.6], [252.0, 1177.5], [251.0, 2809.2], [250.0, 5412.4], [249.0, 2388.8], [255.0, 887.0], [253.0, 1459.75], [248.0, 1494.3333333333333], [259.0, 1566.0], [271.0, 3069.4444444444443], [269.0, 3791.0], [268.0, 1998.3333333333335], [267.0, 2002.7499999999998], [265.0, 2224.75], [264.0, 2364.75], [266.0, 1329.8999999999999], [263.0, 3320.8333333333335], [261.0, 2385.222222222222], [260.0, 1167.0], [262.0, 1413.2], [257.0, 4171.142857142857], [256.0, 2257.3333333333335], [258.0, 1502.6666666666667], [270.0, 1584.0], [274.0, 2448.0], [286.0, 3271.333333333333], [284.0, 2434.5833333333335], [275.0, 2126.0], [281.0, 1655.0909090909092], [283.0, 2155.5], [282.0, 1941.0], [278.0, 5189.666666666667], [277.0, 5678.5], [276.0, 1260.75], [273.0, 3153.285714285714], [279.0, 1883.1666666666665], [272.0, 1893.75], [287.0, 1669.6], [280.0, 1357.2857142857144], [285.0, 1830.6], [302.0, 3649.0], [303.0, 3619.5], [301.0, 1650.6666666666667], [300.0, 4816.0], [297.0, 1991.3333333333333], [296.0, 3304.166666666667], [291.0, 3258.875], [290.0, 5137.25], [289.0, 3108.3333333333335], [288.0, 3446.5], [295.0, 2964.0], [294.0, 5562.666666666666], [293.0, 976.3333333333334], [292.0, 1309.6666666666667], [299.0, 1953.0000000000002], [298.0, 1917.5], [318.0, 1674.3333333333335], [319.0, 6982.0], [317.0, 3324.0], [316.0, 1243.5], [307.0, 5635.714285714285], [305.0, 4250.75], [306.0, 1725.0], [304.0, 4616.0], [315.0, 4549.666666666667], [314.0, 3543.5], [313.0, 2844.75], [312.0, 2121.6666666666665], [311.0, 5072.0], [309.0, 2772.0], [310.0, 552.0], [308.0, 3660.0], [323.0, 1810.2], [335.0, 3185.6], [333.0, 2129.4], [334.0, 289.0], [331.0, 1564.5], [329.0, 3330.375], [328.0, 1284.0], [325.0, 3189.6], [324.0, 1080.3333333333333], [322.0, 1984.5], [321.0, 4389.0], [320.0, 1874.3333333333333], [327.0, 677.2], [326.0, 973.0], [351.0, 1534.6], [350.0, 1298.45], [349.0, 678.0], [347.0, 3312.375], [346.0, 2075.0], [345.0, 748.75], [344.0, 2743.3333333333335], [343.0, 1232.2222222222222], [342.0, 1326.5], [341.0, 1893.75], [340.0, 621.0], [338.0, 2717.0], [337.0, 4381.5], [336.0, 792.5], [339.0, 1148.0], [348.0, 830.7], [366.0, 3585.8750000000005], [367.0, 2361.0], [364.0, 6571.0], [365.0, 735.0], [363.0, 3096.0], [362.0, 1837.3333333333333], [361.0, 2399.3050847457616], [360.0, 1900.6], [359.0, 1337.3253012048192], [356.0, 2673.4], [358.0, 827.6666666666666], [357.0, 1104.0], [355.0, 2077.5], [354.0, 1697.2], [352.0, 1725.9999999999998], [353.0, 770.5714285714286], [381.0, 3454.75], [383.0, 3563.75], [380.0, 5691.166666666667], [371.0, 5930.0], [376.0, 7307.25], [377.0, 1268.0], [379.0, 3240.6666666666665], [378.0, 2225.8333333333335], [375.0, 5031.0], [372.0, 4011.2], [374.0, 1638.0], [373.0, 3434.0], [370.0, 3024.333333333333], [369.0, 6120.5], [368.0, 891.0], [382.0, 2424.5], [397.0, 3280.1428571428573], [396.0, 2670.8333333333335], [393.0, 1693.2857142857144], [392.0, 1434.4444444444443], [399.0, 2476.0], [398.0, 2107.3333333333335], [391.0, 4757.428571428572], [388.0, 2228.4], [390.0, 1798.0], [389.0, 1652.75], [387.0, 3000.4285714285716], [386.0, 2055.75], [385.0, 2033.0], [384.0, 3695.6666666666665], [395.0, 931.8], [394.0, 1292.8571428571427], [412.0, 1893.2], [406.0, 3666.0], [415.0, 3141.8], [405.0, 2418.375], [404.0, 1287.25], [414.0, 1383.6000000000001], [413.0, 1714.0], [410.0, 3846.8], [409.0, 3021.75], [411.0, 1399.375], [408.0, 2113.0], [407.0, 1513.7142857142858], [401.0, 1786.25], [400.0, 1598.0], [403.0, 1172.3333333333333], [402.0, 1972.5], [419.0, 2029.111111111111], [430.0, 3082.3846153846157], [427.0, 2383.5000000000005], [426.0, 1805.888888888889], [423.0, 2673.5454545454545], [421.0, 2470.818181818182], [420.0, 1085.0], [422.0, 1307.1000000000001], [417.0, 1955.9], [416.0, 901.1428571428571], [418.0, 1840.1666666666667], [429.0, 1501.1764705882354], [428.0, 814.8], [424.0, 1185.0], [425.0, 939.8333333333335], [431.0, 1122.5714285714287], [434.0, 2858.125], [445.0, 4278.625], [444.0, 842.7142857142857], [435.0, 2027.7142857142858], [441.0, 1716.125], [440.0, 3337.6666666666665], [447.0, 1352.4], [446.0, 870.5714285714286], [437.0, 2844.857142857143], [436.0, 2389.714285714286], [432.0, 3414.1111111111113], [433.0, 1761.8], [439.0, 2973.3333333333335], [438.0, 2533.1249999999995], [443.0, 2068.769230769231], [442.0, 1421.75], [462.0, 3836.3750000000005], [463.0, 2082.5], [461.0, 2617.285714285714], [460.0, 1990.1666666666665], [451.0, 2418.363636363637], [448.0, 2360.75], [455.0, 259.0], [450.0, 1081.111111111111], [449.0, 1861.0], [458.0, 3731.1666666666665], [459.0, 3113.0], [457.0, 1902.2], [456.0, 2182.6153846153848], [454.0, 2316.857142857143], [453.0, 2021.3571428571427], [452.0, 2056.5555555555557], [467.0, 2943.5], [478.0, 3946.571428571429], [477.0, 2485.666666666667], [476.0, 1339.222222222222], [473.0, 2486.5], [474.0, 2650.428571428571], [475.0, 1074.6], [472.0, 1745.2222222222222], [479.0, 1377.7142857142856], [471.0, 1485.0], [470.0, 1935.5454545454547], [469.0, 3124.8749999999995], [468.0, 1488.6666666666665], [465.0, 3675.375], [466.0, 1042.0], [464.0, 1255.5454545454545], [494.0, 3846.6], [495.0, 2013.25], [493.0, 2435.0], [492.0, 3547.2], [491.0, 2629.0], [490.0, 2135.1428571428573], [489.0, 1917.5], [488.0, 2355.636363636364], [487.0, 3134.5555555555557], [481.0, 4381.5], [480.0, 2449.875], [483.0, 3772.0], [482.0, 2077.777777777778], [486.0, 2656.7], [484.0, 2329.307692307693], [485.0, 1949.8749999999998], [498.0, 2771.6], [511.0, 3587.8], [510.0, 5892.833333333334], [499.0, 2567.75], [508.0, 808.3333333333333], [509.0, 668.0], [497.0, 2494.4], [496.0, 2291.3333333333335], [507.0, 6533.833333333334], [506.0, 1667.0], [505.0, 3314.5], [504.0, 9094.0], [503.0, 4797.0], [502.0, 6259.25], [501.0, 6422.666666666667], [500.0, 4098.166666666667], [540.0, 3297.5454545454545], [516.0, 2844.6666666666665], [514.0, 7897.0], [526.0, 3207.8888888888887], [512.0, 4576.5], [518.0, 6785.0], [538.0, 991.0], [536.0, 1723.6153846153845], [524.0, 2479.8333333333335], [522.0, 3975.0], [520.0, 1979.5833333333335], [534.0, 5028.2], [532.0, 4627.5], [530.0, 2411.25], [528.0, 1404.3333333333333], [542.0, 3754.6666666666665], [570.0, 2450.4799999999996], [562.0, 2724.3333333333335], [574.0, 3567.1428571428573], [572.0, 1464.5], [560.0, 5800.333333333333], [550.0, 2585.6153846153848], [568.0, 1839.3333333333335], [548.0, 3653.6666666666665], [544.0, 3649.764705882353], [546.0, 1981.0000000000002], [558.0, 2117.0], [556.0, 1769.0], [554.0, 2584.0], [552.0, 2742.3333333333335], [566.0, 3012.5], [564.0, 4259.285714285714], [604.0, 3408.6], [594.0, 3452.5], [606.0, 3804.0], [592.0, 4238.833333333333], [602.0, 4694.0], [600.0, 3478.5714285714284], [582.0, 5232.888888888889], [580.0, 7591.5], [578.0, 1446.3333333333333], [576.0, 2079.0], [590.0, 7744.75], [586.0, 6283.25], [588.0, 1760.4], [584.0, 2632.6666666666665], [596.0, 3998.666666666667], [598.0, 2242.0], [636.0, 4801.875], [624.0, 2157.875], [638.0, 2189.4166666666665], [634.0, 4828.555555555556], [632.0, 1787.875], [622.0, 5385.5], [620.0, 1830.0], [608.0, 1692.1666666666665], [612.0, 2594.1538461538466], [610.0, 3228.5], [614.0, 3155.8333333333335], [618.0, 2141.2857142857147], [616.0, 2232.181818181818], [630.0, 1703.2222222222224], [628.0, 3032.25], [626.0, 2719.875], [664.0, 3179.5], [670.0, 4873.142857142858], [650.0, 2360.25], [648.0, 1881.0], [640.0, 1958.6363636363637], [646.0, 2671.416666666667], [644.0, 1781.0555555555557], [642.0, 2373.0833333333335], [668.0, 2262.3749999999995], [666.0, 2406.75], [662.0, 1600.1666666666665], [656.0, 2102.5], [658.0, 1203.5], [660.0, 2042.142857142857], [652.0, 2054.8333333333335], [654.0, 2049.0], [698.0, 4212.0], [688.0, 4086.1111111111104], [690.0, 4782.5], [702.0, 2828.125], [700.0, 1494.5], [696.0, 2263.625], [676.0, 4554.0], [678.0, 1013.6666666666666], [686.0, 3790.8], [672.0, 4679.666666666667], [674.0, 1398.8], [684.0, 3982.8], [682.0, 4062.8], [680.0, 3744.6666666666665], [694.0, 2347.6666666666665], [692.0, 4350.0], [730.0, 3358.3333333333335], [728.0, 4996.375], [710.0, 3419.8], [734.0, 2967.875], [720.0, 3563.285714285714], [722.0, 3052.875], [732.0, 3238.0], [708.0, 4372.5], [718.0, 2374.833333333333], [706.0, 2203.7], [704.0, 2921.666666666667], [716.0, 2914.5], [712.0, 3065.0], [714.0, 2423.0], [726.0, 3307.384615384615], [724.0, 3361.2], [764.0, 2669.7826086956525], [766.0, 2695.0], [752.0, 2575.0], [754.0, 2326.256756756757], [762.0, 2366.8125000000005], [760.0, 2892.709677419355], [742.0, 3414.176470588235], [750.0, 2318.5416666666665], [736.0, 2409.347826086956], [738.0, 2948.705882352941], [740.0, 3112.5000000000005], [748.0, 4275.230769230769], [746.0, 3882.454545454546], [744.0, 2104.9999999999995], [758.0, 2797.625], [756.0, 5492.428571428572], [796.0, 1940.9999999999998], [798.0, 2171.090909090909], [794.0, 2892.4285714285716], [792.0, 4786.777777777777], [770.0, 4106.0], [774.0, 2695.4285714285716], [772.0, 3524.5714285714284], [768.0, 1940.148936170213], [790.0, 5964.5], [788.0, 3806.25], [786.0, 5665.0], [784.0, 2386.153846153846], [782.0, 2402.0], [780.0, 3156.8888888888887], [778.0, 1748.1666666666667], [776.0, 2600.166666666667], [802.0, 3177.125], [830.0, 4668.857142857143], [816.0, 3085.2380952380954], [818.0, 2524.7333333333336], [828.0, 2933.9], [826.0, 4705.666666666666], [824.0, 2472.0], [804.0, 2801.2727272727275], [806.0, 1571.1176470588234], [800.0, 2133.4761904761904], [814.0, 2540.6666666666665], [810.0, 2855.0588235294117], [812.0, 2846.0588235294113], [808.0, 3106.875], [820.0, 3067.7727272727275], [822.0, 2460.8333333333335], [860.0, 6763.666666666666], [858.0, 6085.0], [856.0, 990.0], [854.0, 7057.333333333334], [852.0, 10486.333333333334], [862.0, 507.0], [850.0, 3865.6666666666665], [832.0, 7528.0], [846.0, 8553.0], [836.0, 4866.0], [842.0, 5637.0], [840.0, 11077.333333333334], [888.0, 9284.0], [890.0, 9778.0], [882.0, 3373.666666666667], [892.0, 7382.0], [894.0, 6256.0], [880.0, 6218.0], [866.0, 5266.0], [870.0, 6809.0], [864.0, 5428.4], [878.0, 4394.0], [874.0, 6169.0], [872.0, 6263.0], [884.0, 8001.8], [886.0, 9158.0], [896.0, 7125.0], [914.0, 5689.0], [926.0, 8601.5], [910.0, 11039.0], [902.0, 5838.0], [898.0, 718.0], [920.0, 1495.0], [924.0, 1048.0], [922.0, 433.0], [908.0, 6148.0], [906.0, 9014.0], [904.0, 7599.0], [918.0, 6760.333333333334], [916.0, 593.5], [912.0, 8039.0], [930.0, 11157.0], [958.0, 9268.0], [956.0, 8320.666666666666], [952.0, 4362.0], [954.0, 1859.0], [928.0, 6487.25], [942.0, 650.0], [934.0, 10417.0], [932.0, 446.0], [940.0, 5414.5], [938.0, 9477.5], [936.0, 10476.333333333334], [950.0, 8297.0], [948.0, 632.0], [946.0, 5300.0], [984.0, 6063.0], [990.0, 11472.0], [976.0, 10441.0], [986.0, 4333.333333333333], [974.0, 7556.0], [960.0, 1025.0], [962.0, 4882.5], [966.0, 6057.0], [964.0, 1802.0], [972.0, 10187.0], [970.0, 5738.5], [968.0, 10742.0], [982.0, 5275.0], [980.0, 5186.666666666666], [978.0, 3026.5], [1018.0, 4195.4], [1022.0, 6599.0], [1010.0, 3818.0], [1020.0, 8989.0], [1016.0, 7427.5], [998.0, 6092.0], [994.0, 4239.5], [996.0, 6521.0], [992.0, 5681.333333333334], [1004.0, 2227.5], [1006.0, 5120.5], [1002.0, 2268.75], [1000.0, 6776.0], [1014.0, 7545.333333333334], [1012.0, 611.0], [1080.0, 5898.0], [1084.0, 4824.0], [1060.0, 419.5], [1056.0, 6201.0], [1076.0, 2148.5], [1072.0, 1705.9999999999998], [1036.0, 391.0], [1068.0, 2145.0], [1064.0, 5749.333333333334], [1052.0, 5685.75], [1048.0, 973.0], [1044.0, 3422.5], [1040.0, 906.0], [1032.0, 7328.0], [1028.0, 8625.333333333334], [1024.0, 5071.0], [1136.0, 2636.727272727273], [1148.0, 1409.2857142857142], [1144.0, 3063.8], [1140.0, 2932.7999999999997], [1100.0, 2811.333333333333], [1096.0, 2114.0], [1092.0, 4093.1666666666665], [1088.0, 3935.0], [1104.0, 5100.857142857142], [1112.0, 510.8333333333333], [1108.0, 785.5], [1116.0, 1815.2], [1132.0, 1848.0833333333335], [1128.0, 3516.3125000000005], [1120.0, 2432.4444444444443], [1124.0, 3129.0], [1212.0, 2755.25], [1184.0, 3052.166666666667], [1208.0, 4486.444444444444], [1204.0, 1982.466666666667], [1200.0, 1669.5294117647056], [1164.0, 1870.6923076923078], [1160.0, 2571.272727272727], [1152.0, 3862.0000000000005], [1156.0, 1487.2222222222222], [1180.0, 1792.6666666666665], [1176.0, 3841.0], [1168.0, 1243.0], [1172.0, 2959.5000000000005], [1188.0, 1925.7142857142856], [1196.0, 321.2], [1192.0, 1166.0], [1272.0, 1970.4999999999998], [1276.0, 1665.9166666666667], [1268.0, 1559.7142857142858], [1264.0, 222.16666666666669], [1228.0, 3204.0], [1256.0, 1983.2499999999995], [1260.0, 951.8333333333333], [1252.0, 1093.4285714285713], [1248.0, 1619.5000000000002], [1216.0, 4753.5], [1244.0, 3081.75], [1220.0, 2627.5625], [1224.0, 2687.0], [1240.0, 2902.222222222222], [1236.0, 3269.5999999999995], [1232.0, 1064.7142857142858], [1336.0, 5006.5], [1312.0, 2087.875], [1316.0, 3764.166666666667], [1324.0, 6883.666666666667], [1332.0, 8254.0], [1328.0, 11049.0], [1288.0, 2206.714285714286], [1292.0, 2042.5000000000002], [1280.0, 2701.375], [1308.0, 2255.3333333333335], [1304.0, 1546.4444444444443], [1284.0, 4344.0], [1300.0, 1305.888888888889], [1296.0, 1665.5000000000002], [1400.0, 8881.5], [1376.0, 10514.0], [1384.0, 6106.0], [1388.0, 4729.0], [1404.0, 10241.0], [1396.0, 4589.0], [1392.0, 6028.0], [1348.0, 9817.0], [1352.0, 9156.0], [1356.0, 8339.0], [1372.0, 9938.0], [1368.0, 5268.0], [1364.0, 5285.0], [1444.0, 1318.0], [1440.0, 1325.0], [1452.0, 1320.0], [1412.0, 7365.0], [1408.0, 1349.0], [1436.0, 4712.5], [1424.0, 1339.0], [1524.0, 6788.0], [1532.0, 5146.0], [1504.0, 1268.0], [1508.0, 1259.0], [1516.0, 2990.5], [1520.0, 4315.0], [1472.0, 1293.5], [1476.0, 1281.0], [1480.0, 1277.0], [1500.0, 6370.0], [1492.0, 11189.0], [1488.0, 4131.5], [1584.0, 6289.0], [1572.0, 8470.5], [1580.0, 4564.0], [1588.0, 11213.0], [1536.0, 9269.0], [1540.0, 8952.0], [1544.0, 9131.0], [1548.0, 9522.5], [1564.0, 7647.5], [1560.0, 1473.0], [1556.0, 7271.5], [1656.0, 4762.5], [1660.0, 1137.0], [1632.0, 3127.5], [1636.0, 7746.0], [1652.0, 8065.0], [1648.0, 6275.0], [1608.0, 5351.0], [1628.0, 6748.0], [1616.0, 5575.5], [1720.0, 10849.0], [1700.0, 3533.0], [1704.0, 6023.5], [1708.0, 8006.5], [1724.0, 4916.0], [1716.0, 4928.0], [1712.0, 8889.5], [1676.0, 10868.0], [1672.0, 6605.0], [1668.0, 6936.0], [1664.0, 5476.0], [1692.0, 7866.0], [1684.0, 6518.0], [1680.0, 9947.0], [1784.0, 8966.5], [1768.0, 8045.0], [1772.0, 4483.0], [1788.0, 10968.0], [1780.0, 7148.5], [1736.0, 5816.0], [1732.0, 1209.0], [1756.0, 4199.666666666667], [1752.0, 9832.0], [1748.0, 1217.0], [1848.0, 6881.0], [1828.0, 7735.5], [1824.0, 4347.0], [1832.0, 9354.0], [1836.0, 4263.5], [1852.0, 3988.0], [1844.0, 7612.0], [1840.0, 4629.0], [1820.0, 6084.0], [1816.0, 9686.666666666666], [1808.0, 4427.0], [1916.0, 6646.5], [1888.0, 7238.5], [1892.0, 6801.0], [1900.0, 4706.5], [1864.0, 8498.5], [1860.0, 7855.0], [1856.0, 7730.0], [1884.0, 7117.5], [1880.0, 3946.666666666667], [1876.0, 6225.0], [1872.0, 3459.0], [1972.0, 6907.0], [1980.0, 6580.0], [1952.0, 6486.333333333333], [1964.0, 8127.0], [1968.0, 6971.0], [1920.0, 6047.0], [1928.0, 7001.0], [1932.0, 3718.0], [1948.0, 8156.0], [1936.0, 8946.0], [2032.0, 3713.0], [2020.0, 3718.0], [2016.0, 8687.0], [2028.0, 7758.0], [2044.0, 8229.0], [1984.0, 3868.5], [2012.0, 5219.0], [2008.0, 5256.0], [2000.0, 4556.0], [2152.0, 7081.5], [2144.0, 3260.0], [2112.0, 3221.0], [2120.0, 5675.0], [2136.0, 6053.333333333333], [2160.0, 4556.0], [2072.0, 8862.0], [2064.0, 9249.0], [2056.0, 3726.0], [2048.0, 3693.0], [2104.0, 3248.0], [2096.0, 3268.0], [2088.0, 3318.0], [2080.0, 3588.0], [2280.0, 6011.272727272727], [2288.0, 10411.0], [2272.0, 5291.5], [2296.0, 6093.0], [2264.0, 8274.5], [2256.0, 6981.0], [2248.0, 9472.0], [2192.0, 8414.0], [2184.0, 4842.5], [2232.0, 5005.0], [2224.0, 7385.5], [2216.0, 4977.0], [2312.0, 9138.0], [2368.0, 8109.0], [2384.0, 4854.0], [2392.0, 5273.0], [2304.0, 8327.0], [2320.0, 7339.0], [2360.0, 9009.0], [2352.0, 2901.0], [2344.0, 2908.0], [2336.0, 6360.0], [2400.0, 8454.0], [2408.0, 3519.0], [2416.0, 7408.0], [2432.0, 8833.0], [2161.0, 10549.0], [2169.0, 3548.0], [2129.0, 9717.0], [2137.0, 5586.0], [2153.0, 3211.0], [2145.0, 6284.0], [2073.0, 9949.0], [2065.0, 6008.0], [2057.0, 9031.0], [2049.0, 10375.0], [2089.0, 3287.0], [2081.0, 3587.0], [2289.0, 5496.0], [2281.0, 5728.4], [2297.0, 7465.0], [2257.0, 5245.0], [2249.0, 6023.0], [2241.0, 8429.5], [2265.0, 2369.0], [2201.0, 5462.333333333333], [2177.0, 4992.0], [2233.0, 5020.0], [2217.0, 10080.0], [2209.0, 6655.0], [2273.0, 7391.5], [2313.0, 6373.0], [2329.0, 8390.5], [2369.0, 6563.0], [2377.0, 6252.5], [2385.0, 5090.5], [2393.0, 4790.0], [2305.0, 7062.0], [2321.0, 5047.0], [2361.0, 9386.0], [2345.0, 2947.0], [2337.0, 6432.0], [2401.0, 6584.5], [2425.0, 7275.333333333333], [2433.0, 7009.0], [1073.0, 4748.5], [1061.0, 2205.5], [1085.0, 3228.3333333333335], [1057.0, 9488.0], [1081.0, 3480.0], [1077.0, 3250.0], [1029.0, 6388.5], [1025.0, 846.0], [1037.0, 595.0], [1033.0, 841.0], [1053.0, 4353.5], [1049.0, 4568.5], [1045.0, 8130.666666666667], [1041.0, 3428.666666666667], [1069.0, 1847.5], [1065.0, 3121.5], [1093.0, 4423.5], [1149.0, 1886.0], [1125.0, 1382.8888888888887], [1121.0, 1668.769230769231], [1145.0, 3271.4], [1141.0, 1214.3333333333333], [1137.0, 1976.2222222222222], [1101.0, 910.5], [1097.0, 710.3333333333334], [1089.0, 3813.666666666667], [1117.0, 3776.0], [1109.0, 4370.666666666667], [1113.0, 1255.8333333333333], [1105.0, 3435.333333333333], [1133.0, 1573.3333333333333], [1129.0, 2634.6153846153848], [1209.0, 2655.5789473684213], [1213.0, 3897.777777777778], [1185.0, 1942.6249999999998], [1189.0, 3267.8333333333335], [1201.0, 2780.0], [1165.0, 1640.111111111111], [1161.0, 1800.142857142857], [1205.0, 2033.0], [1157.0, 3979.714285714286], [1181.0, 3685.4285714285716], [1153.0, 1745.9999999999998], [1169.0, 1804.923076923077], [1173.0, 1221.5555555555557], [1177.0, 5347.5], [1193.0, 902.1999999999999], [1197.0, 831.6666666666666], [1273.0, 2107.5454545454545], [1253.0, 4988.857142857143], [1277.0, 783.5], [1249.0, 777.0], [1225.0, 3112.0], [1269.0, 1103.8461538461538], [1265.0, 1235.0000000000002], [1229.0, 2928.9090909090905], [1221.0, 3118.833333333333], [1233.0, 5283.444444444444], [1245.0, 376.3333333333333], [1241.0, 4677.857142857143], [1217.0, 3387.5714285714284], [1237.0, 2362.5454545454545], [1261.0, 2133.4615384615386], [1257.0, 2303.777777777778], [1337.0, 11420.0], [1313.0, 2545.0], [1321.0, 10855.0], [1317.0, 5788.5], [1341.0, 8927.75], [1333.0, 9130.0], [1329.0, 5122.5], [1293.0, 3291.5555555555557], [1289.0, 1968.7142857142858], [1309.0, 3212.461538461538], [1285.0, 2471.285714285714], [1281.0, 2400.583333333333], [1305.0, 2349.1250000000005], [1301.0, 2018.5555555555559], [1297.0, 1681.142857142857], [1353.0, 7346.333333333333], [1401.0, 10537.0], [1377.0, 8943.0], [1381.0, 6761.5], [1385.0, 6342.0], [1345.0, 7968.5], [1373.0, 8209.0], [1369.0, 8341.5], [1365.0, 5282.0], [1361.0, 5289.5], [1465.0, 1300.3333333333333], [1441.0, 1320.0], [1445.0, 1992.5], [1449.0, 2183.0], [1469.0, 1297.6666666666667], [1461.0, 1308.0], [1457.0, 1307.0], [1409.0, 1344.0], [1433.0, 8226.0], [1533.0, 7705.5], [1509.0, 1265.0], [1505.0, 7078.0], [1513.0, 4835.5], [1517.0, 8407.0], [1529.0, 8284.0], [1477.0, 1295.0], [1481.0, 1275.3333333333333], [1501.0, 9431.0], [1589.0, 4399.0], [1593.0, 8889.5], [1569.0, 5981.0], [1597.0, 8371.0], [1537.0, 9699.0], [1545.0, 6984.0], [1557.0, 11235.0], [1553.0, 6068.0], [1661.0, 4537.0], [1637.0, 8322.0], [1641.0, 4764.0], [1645.0, 7854.0], [1649.0, 7621.0], [1613.0, 5834.5], [1609.0, 10693.0], [1605.0, 4862.0], [1601.0, 6798.5], [1717.0, 7949.0], [1713.0, 993.0], [1701.0, 7497.0], [1709.0, 4690.0], [1725.0, 4391.0], [1677.0, 4459.0], [1673.0, 9961.0], [1669.0, 6568.0], [1665.0, 5473.0], [1689.0, 9636.0], [1685.0, 10165.0], [1681.0, 6470.0], [1777.0, 10865.0], [1789.0, 4437.0], [1773.0, 10212.0], [1781.0, 1185.0], [1741.0, 1221.0], [1729.0, 2389.0], [1757.0, 6675.0], [1745.0, 1964.0], [1829.0, 8508.0], [1825.0, 4006.0], [1833.0, 6873.666666666667], [1837.0, 6037.0], [1849.0, 5246.0], [1841.0, 5556.0], [1809.0, 7555.0], [1909.0, 6264.5], [1913.0, 6066.333333333333], [1889.0, 1142.0], [1893.0, 5102.0], [1897.0, 10192.5], [1901.0, 5174.0], [1905.0, 5590.5], [1861.0, 7141.0], [1857.0, 10136.0], [1881.0, 8359.0], [1877.0, 1153.0], [1929.0, 3724.0], [1957.0, 5422.5], [1961.0, 6085.5], [1965.0, 7322.0], [1921.0, 3834.0], [1949.0, 3706.0], [1945.0, 4110.0], [1937.0, 10795.0], [2045.0, 7622.0], [2017.0, 6771.0], [2025.0, 8866.0], [2029.0, 8506.0], [2041.0, 8817.333333333334], [2037.0, 7541.333333333333], [2033.0, 9093.0], [1989.0, 6015.5], [1985.0, 10504.0], [2005.0, 8961.5], [2162.0, 9650.0], [2122.0, 6877.5], [2130.0, 5110.5], [2170.0, 4304.0], [2146.0, 5313.5], [2074.0, 9590.0], [2066.0, 7747.0], [2058.0, 6832.0], [2050.0, 7504.0], [2106.0, 3244.0], [2098.0, 3266.0], [2090.0, 3288.0], [2082.0, 5409.0], [2282.0, 7495.75], [2290.0, 8662.0], [2298.0, 7449.0], [2266.0, 4729.333333333334], [2242.0, 6031.0], [2194.0, 4287.0], [2186.0, 4081.0], [2178.0, 4947.5], [2226.0, 5070.0], [2218.0, 7097.0], [2210.0, 5082.0], [2314.0, 6093.0], [2410.0, 7981.5], [2370.0, 5533.5], [2378.0, 6749.0], [2386.0, 4814.0], [2306.0, 8740.0], [2322.0, 2990.0], [2354.0, 2947.5], [2346.0, 2932.0], [2338.0, 7501.0], [2418.0, 4793.0], [2426.0, 8010.0], [2434.0, 4913.0], [2115.0, 3263.5], [2155.0, 7689.5], [2123.0, 10345.0], [2131.0, 3526.0], [2139.0, 3262.0], [2067.0, 6364.0], [2059.0, 3716.5], [2051.0, 3691.0], [2083.0, 3325.0], [2275.0, 7610.0], [2291.0, 10044.0], [2299.0, 9806.0], [2259.0, 3916.0], [2283.0, 8667.0], [2267.0, 7820.666666666667], [2195.0, 4957.0], [2235.0, 6424.0], [2227.0, 5150.0], [2211.0, 4675.0], [2307.0, 5400.0], [2371.0, 2919.0], [2395.0, 6958.5], [2323.0, 2963.0], [2363.0, 6357.0], [2355.0, 2920.0], [2347.0, 7493.0], [2339.0, 2949.0], [2331.0, 4122.0], [2403.0, 6372.0], [2411.0, 6021.0], [2419.0, 4508.0], [2427.0, 9692.0], [2435.0, 8797.0], [537.0, 4323.2307692307695], [531.0, 3314.2], [543.0, 3285.8], [539.0, 3054.692307692308], [541.0, 2294.8], [527.0, 5102.0], [513.0, 8929.0], [515.0, 3853.4], [519.0, 5180.6], [517.0, 1645.1666666666665], [523.0, 5151.555555555556], [521.0, 4675.0], [525.0, 3553.833333333333], [533.0, 3285.8], [535.0, 2014.9333333333332], [529.0, 3360.1666666666665], [569.0, 4244.0], [573.0, 2484.190476190476], [561.0, 4318.8], [575.0, 2433.0], [571.0, 3980.0], [545.0, 2570.8125], [549.0, 1423.6666666666667], [551.0, 1386.888888888889], [547.0, 1690.3333333333333], [559.0, 3665.833333333333], [557.0, 5750.75], [555.0, 2792.1666666666665], [553.0, 5521.0], [565.0, 4446.833333333334], [567.0, 2827.5], [563.0, 3811.25], [601.0, 3880.0], [605.0, 3754.3333333333335], [603.0, 2005.75], [607.0, 1686.3333333333333], [593.0, 1120.3333333333333], [583.0, 3081.5], [581.0, 955.0], [579.0, 4932.75], [577.0, 3442.5], [591.0, 933.3333333333334], [587.0, 2956.0], [585.0, 2985.2857142857138], [589.0, 3990.4], [597.0, 3388.5714285714284], [599.0, 3512.2499999999995], [595.0, 5211.833333333333], [633.0, 3447.8], [637.0, 4137.0], [639.0, 4494.111111111111], [627.0, 1730.3333333333333], [625.0, 2384.0], [635.0, 3521.25], [611.0, 1619.7692307692307], [609.0, 2529.142857142857], [613.0, 2366.2727272727275], [615.0, 3727.0], [617.0, 2774.636363636364], [621.0, 1852.75], [619.0, 3022.666666666667], [623.0, 2399.0], [631.0, 2873.0], [629.0, 944.0], [667.0, 2393.5], [671.0, 1695.0], [669.0, 3562.0], [659.0, 2959.1111111111113], [663.0, 2455.416666666667], [661.0, 3197.4999999999995], [657.0, 3270.272727272727], [641.0, 1292.7857142857142], [655.0, 2148.4545454545455], [653.0, 2038.6250000000002], [651.0, 3165.166666666667], [649.0, 1557.2222222222222], [643.0, 2422.0833333333335], [645.0, 2116.666666666667], [665.0, 1382.0], [647.0, 1533.6153846153845], [699.0, 5046.222222222223], [691.0, 2868.2], [701.0, 3570.6250000000005], [703.0, 3332.25], [689.0, 7086.666666666667], [673.0, 3600.1666666666665], [675.0, 1368.5], [677.0, 1841.6666666666667], [679.0, 3741.875], [697.0, 3351.75], [687.0, 4162.666666666667], [685.0, 3701.0], [681.0, 2630.137931034483], [683.0, 5028.666666666666], [693.0, 4942.8], [695.0, 1724.0], [711.0, 4039.166666666667], [735.0, 3172.866666666667], [721.0, 2822.222222222222], [723.0, 3291.0999999999995], [733.0, 3416.0000000000005], [729.0, 3196.545454545455], [731.0, 2101.5], [719.0, 3221.2000000000003], [717.0, 1191.4285714285716], [705.0, 2583.25], [707.0, 4622.153846153846], [709.0, 3487.1428571428573], [715.0, 2623.1111111111113], [713.0, 4304.0], [727.0, 2577.125], [725.0, 3234.5454545454545], [761.0, 2602.083333333333], [765.0, 2317.9545454545455], [755.0, 2314.564102564103], [757.0, 1791.6666666666667], [759.0, 3101.5000000000005], [753.0, 2812.4705882352937], [767.0, 2001.8333333333333], [763.0, 2976.3125], [743.0, 4130.5625], [741.0, 4150.590909090909], [739.0, 3484.9999999999995], [737.0, 2212.5499999999993], [751.0, 3461.2916666666665], [749.0, 2133.411764705882], [747.0, 2088.6666666666665], [745.0, 2458.677419354839], [797.0, 3125.7037037037035], [799.0, 2301.166666666666], [795.0, 3553.454545454545], [793.0, 3152.777777777778], [775.0, 4978.599999999999], [773.0, 6068.0], [771.0, 3397.5555555555557], [769.0, 3079.444444444445], [791.0, 3543.8], [789.0, 5027.6], [787.0, 4523.375], [785.0, 1827.0], [783.0, 5837.666666666666], [781.0, 3425.666666666667], [779.0, 2303.133333333333], [777.0, 4690.25], [827.0, 3373.9999999999995], [819.0, 1896.3125000000002], [831.0, 4593.25], [829.0, 4347.833333333333], [817.0, 2996.666666666666], [825.0, 4105.333333333333], [807.0, 2139.4], [805.0, 2925.6666666666665], [803.0, 3203.75], [801.0, 2790.5999999999995], [813.0, 2884.375], [815.0, 2426.25], [809.0, 2912.785714285714], [811.0, 2904.357142857143], [823.0, 3282.44], [821.0, 2884.125], [839.0, 8585.666666666666], [863.0, 8711.5], [857.0, 5804.75], [861.0, 6484.0], [859.0, 6828.0], [851.0, 3559.0], [855.0, 795.0], [853.0, 988.0], [849.0, 6873.0], [847.0, 5622.0], [833.0, 10029.0], [835.0, 3467.333333333333], [837.0, 7184.0], [845.0, 8454.4], [843.0, 1019.0], [841.0, 1438.0], [891.0, 8730.333333333334], [881.0, 10365.0], [895.0, 503.0], [871.0, 6475.0], [889.0, 729.0], [869.0, 4800.75], [867.0, 5707.0], [879.0, 544.0], [865.0, 840.0], [877.0, 4230.0], [875.0, 5857.5], [873.0, 947.5], [887.0, 2486.5], [885.0, 9315.0], [923.0, 6665.0], [927.0, 5593.5], [913.0, 3677.0], [925.0, 741.0], [921.0, 6701.333333333334], [899.0, 9454.5], [897.0, 5269.5], [901.0, 6265.5], [907.0, 5422.5], [905.0, 6637.0], [911.0, 703.0], [917.0, 5435.666666666666], [919.0, 858.0], [915.0, 4092.5], [953.0, 6062.5], [959.0, 8325.5], [945.0, 7885.666666666667], [955.0, 4427.666666666667], [957.0, 341.0], [943.0, 8723.0], [929.0, 872.0], [931.0, 6003.5], [933.0, 5586.0], [935.0, 1027.0], [941.0, 2468.6666666666665], [939.0, 412.0], [937.0, 1104.0], [949.0, 4869.5], [951.0, 357.0], [947.0, 7978.75], [985.0, 8895.666666666666], [989.0, 6391.5], [977.0, 6402.0], [987.0, 3096.0], [961.0, 7347.25], [963.0, 3337.5], [965.0, 6247.0], [967.0, 750.0], [969.0, 11665.0], [973.0, 982.0], [975.0, 722.0], [983.0, 3981.0], [999.0, 10955.0], [1011.0, 4475.333333333333], [1021.0, 3715.5], [1019.0, 3632.0], [1023.0, 1054.0], [1009.0, 7943.0], [997.0, 6662.0], [995.0, 7611.5], [993.0, 6098.5], [1007.0, 3745.75], [1003.0, 6466.0], [1001.0, 6617.0], [1015.0, 5940.0], [1013.0, 10947.0], [1038.0, 9421.0], [1058.0, 7467.0], [1086.0, 6764.4], [1082.0, 499.0], [1074.0, 3227.5], [1062.0, 5044.5], [1070.0, 1783.6], [1066.0, 7334.0], [1034.0, 8662.0], [1030.0, 460.0], [1026.0, 5139.0], [1046.0, 5173.0], [1042.0, 861.0], [1050.0, 8556.0], [1094.0, 1717.5], [1146.0, 2452.8999999999996], [1138.0, 683.0], [1142.0, 1410.5], [1102.0, 7946.5], [1098.0, 3321.6000000000004], [1118.0, 2880.5714285714284], [1090.0, 2411.333333333333], [1114.0, 4067.222222222222], [1110.0, 3669.142857142857], [1106.0, 5806.333333333333], [1122.0, 2817.733333333333], [1126.0, 1651.5714285714287], [1134.0, 684.5], [1130.0, 761.1428571428572], [1150.0, 1835.8333333333335], [1210.0, 2506.499999999999], [1186.0, 3083.5454545454545], [1190.0, 331.0], [1214.0, 3011.0], [1206.0, 3321.1111111111113], [1202.0, 2833.6315789473683], [1154.0, 3660.625], [1158.0, 3056.4], [1166.0, 1983.1], [1162.0, 1831.0769230769235], [1182.0, 4005.333333333333], [1178.0, 2145.75], [1174.0, 2029.6], [1170.0, 1916.8571428571427], [1198.0, 2119.75], [1194.0, 629.2857142857142], [1266.0, 1837.666666666667], [1250.0, 1744.2222222222224], [1278.0, 1641.888888888889], [1270.0, 1374.3333333333335], [1274.0, 1992.642857142857], [1258.0, 1876.1666666666665], [1254.0, 1024.2], [1262.0, 885.5714285714287], [1246.0, 3997.090909090909], [1222.0, 2852.9166666666665], [1218.0, 2791.181818181818], [1230.0, 3613.384615384615], [1226.0, 3565.5217391304345], [1238.0, 5645.714285714285], [1242.0, 1793.0], [1234.0, 2881.307692307693], [1290.0, 2601.0], [1338.0, 5305.0], [1326.0, 5333.0], [1318.0, 5281.0], [1314.0, 3593.1666666666665], [1294.0, 1664.0], [1310.0, 3260.9545454545455], [1282.0, 2749.0], [1286.0, 2699.142857142857], [1306.0, 2284.92], [1298.0, 3669.0], [1302.0, 2223.0], [1406.0, 6867.0], [1378.0, 5703.0], [1382.0, 11364.0], [1386.0, 10992.0], [1390.0, 7665.0], [1398.0, 8455.5], [1354.0, 7872.0], [1358.0, 10168.0], [1374.0, 9666.0], [1370.0, 8112.5], [1366.0, 6937.0], [1462.0, 1313.0], [1466.0, 1298.0], [1446.0, 1314.0], [1450.0, 1317.5], [1458.0, 1314.0], [1418.0, 11316.0], [1438.0, 5989.0], [1430.0, 1334.6666666666667], [1426.0, 3594.0], [1510.0, 4816.0], [1518.0, 5912.5], [1522.0, 2882.0], [1486.0, 1278.6666666666667], [1502.0, 7311.0], [1498.0, 4029.0], [1494.0, 1286.0], [1586.0, 9068.0], [1570.0, 1403.0], [1574.0, 4500.0], [1578.0, 7781.0], [1582.0, 5558.0], [1590.0, 4870.0], [1538.0, 5483.0], [1542.0, 8024.5], [1550.0, 7601.0], [1562.0, 5762.5], [1558.0, 4872.0], [1658.0, 7530.0], [1634.0, 4770.5], [1638.0, 4841.0], [1646.0, 6170.0], [1654.0, 7082.5], [1650.0, 6328.0], [1606.0, 6715.0], [1630.0, 4459.0], [1626.0, 6149.5], [1622.0, 5689.0], [1722.0, 7556.0], [1698.0, 2648.6666666666665], [1702.0, 5374.5], [1706.0, 6720.0], [1718.0, 7545.0], [1678.0, 10056.0], [1670.0, 9249.0], [1666.0, 9261.0], [1694.0, 8320.0], [1690.0, 10318.0], [1686.0, 7181.0], [1682.0, 5391.0], [1762.0, 4634.75], [1786.0, 5434.0], [1766.0, 1191.5], [1770.0, 4636.0], [1774.0, 6591.333333333333], [1778.0, 9371.0], [1734.0, 3977.0], [1746.0, 1199.0], [1846.0, 5399.0], [1834.0, 9713.0], [1838.0, 3440.0], [1854.0, 3474.0], [1842.0, 5839.0], [1794.0, 2595.25], [1798.0, 3559.5], [1802.0, 3459.5], [1806.0, 3425.333333333333], [1814.0, 4645.0], [1906.0, 3305.0], [1894.0, 1128.0], [1890.0, 6398.0], [1898.0, 2909.0], [1902.0, 5833.0], [1910.0, 4521.0], [1862.0, 6724.0], [1858.0, 7977.0], [1886.0, 9123.0], [1882.0, 3452.0], [1874.0, 9991.0], [1982.0, 9816.666666666666], [1978.0, 7421.0], [1970.0, 3866.0], [1950.0, 4141.0], [1966.0, 10602.0], [2034.0, 4193.0], [2022.0, 9065.0], [2042.0, 7512.0], [2038.0, 971.0], [1998.0, 9464.0], [1994.0, 7142.0], [1990.0, 4488.0], [1986.0, 7205.0], [2010.0, 3712.5], [2002.0, 3719.5], [2076.0, 7024.0], [2148.0, 3770.5], [2164.0, 8393.0], [2132.0, 8614.0], [2140.0, 3245.0], [2172.0, 4399.0], [2068.0, 5435.0], [2060.0, 10385.0], [2052.0, 8994.0], [2084.0, 3335.0], [2196.0, 8456.0], [2300.0, 8848.0], [2276.0, 8237.0], [2252.0, 6253.0], [2244.0, 6018.0], [2268.0, 6961.11111111111], [2188.0, 3706.5], [2180.0, 4393.0], [2236.0, 9540.0], [2220.0, 9361.5], [2324.0, 4144.5], [2316.0, 6688.666666666667], [2428.0, 9979.0], [2372.0, 2916.0], [2380.0, 6147.0], [2388.0, 6993.5], [2308.0, 5397.0], [2364.0, 5315.0], [2356.0, 3727.0], [2348.0, 2931.0], [2340.0, 5359.0], [2404.0, 8876.0], [2412.0, 5489.0], [2420.0, 4812.0], [2436.0, 7479.0], [2157.0, 9104.0], [2117.0, 3693.0], [2125.0, 4568.0], [2133.0, 3249.0], [2141.0, 5429.0], [2165.0, 3210.0], [2077.0, 10597.0], [2109.0, 4199.5], [2101.0, 3249.5], [2093.0, 3253.0], [2085.0, 3315.0], [2285.0, 7367.333333333333], [2293.0, 7568.0], [2277.0, 8972.0], [2261.0, 6198.5], [2245.0, 8945.5], [2269.0, 5632.555555555556], [2189.0, 9408.0], [2181.0, 3137.0], [2237.0, 7189.0], [2213.0, 5634.5], [2325.0, 5660.0], [2309.0, 7206.0], [2373.0, 2862.0], [2381.0, 6055.0], [2389.0, 4979.0], [2397.0, 9413.5], [2365.0, 2872.0], [2357.0, 2943.0], [2341.0, 2968.0], [2333.0, 4999.0], [2405.0, 6512.0], [2413.0, 7045.0], [2421.0, 5918.0], [2437.0, 9043.0], [1039.0, 6189.25], [1083.0, 7026.0], [1087.0, 7929.75], [1063.0, 8928.0], [1079.0, 1270.25], [1075.0, 684.0], [1055.0, 8954.25], [1027.0, 7385.5], [1035.0, 7692.25], [1043.0, 5865.0], [1047.0, 8325.0], [1051.0, 1554.0], [1071.0, 2336.8571428571427], [1067.0, 8390.5], [1139.0, 1658.5], [1147.0, 1960.6666666666667], [1123.0, 2752.0], [1127.0, 2544.035714285714], [1151.0, 1909.0], [1143.0, 1260.6363636363637], [1119.0, 2139.833333333333], [1091.0, 486.0], [1099.0, 6391.8], [1103.0, 366.0], [1095.0, 4131.0], [1111.0, 3628.2499999999995], [1107.0, 789.0], [1115.0, 1183.1666666666665], [1135.0, 1673.0000000000002], [1131.0, 2332.5], [1215.0, 2161.0], [1203.0, 2427.9285714285716], [1207.0, 2386.0], [1211.0, 2004.4444444444443], [1155.0, 2768.5], [1159.0, 2681.3], [1167.0, 1529.4444444444443], [1163.0, 2413.3750000000005], [1179.0, 2606.4444444444443], [1175.0, 1825.3333333333335], [1171.0, 2374.2000000000003], [1183.0, 303.6666666666667], [1199.0, 4929.666666666667], [1195.0, 746.1666666666666], [1191.0, 1930.0909090909092], [1187.0, 1672.0], [1271.0, 2498.7647058823527], [1275.0, 2706.416666666667], [1279.0, 3165.125], [1251.0, 3070.75], [1255.0, 583.6666666666666], [1267.0, 2233.8571428571436], [1231.0, 3192.9999999999995], [1227.0, 3545.375], [1219.0, 3087.416666666667], [1223.0, 2142.1111111111113], [1247.0, 1280.705882352941], [1243.0, 2645.769230769231], [1235.0, 4069.1666666666665], [1239.0, 3305.4285714285716], [1263.0, 2810.083333333333], [1259.0, 2339.1000000000004], [1335.0, 8291.666666666666], [1343.0, 8564.5], [1315.0, 5257.2], [1319.0, 4273.666666666667], [1323.0, 5341.0], [1327.0, 4666.5], [1331.0, 7629.666666666667], [1295.0, 540.3333333333334], [1291.0, 991.0], [1283.0, 3223.181818181818], [1311.0, 2248.5714285714284], [1287.0, 4086.857142857143], [1307.0, 3034.529411764706], [1303.0, 2314.352941176471], [1299.0, 1196.6363636363637], [1407.0, 8613.5], [1383.0, 1575.0], [1403.0, 9494.0], [1379.0, 7768.0], [1387.0, 10901.0], [1391.0, 9759.0], [1395.0, 8712.0], [1375.0, 8323.0], [1347.0, 4939.0], [1359.0, 8255.0], [1371.0, 5264.0], [1367.0, 10879.0], [1363.0, 9536.5], [1471.0, 1295.5], [1451.0, 1318.0], [1455.0, 1312.75], [1459.0, 1310.0], [1431.0, 1331.0], [1527.0, 6811.0], [1531.0, 7423.5], [1535.0, 6787.0], [1507.0, 3853.6666666666665], [1511.0, 1252.0], [1519.0, 5314.5], [1523.0, 6461.0], [1503.0, 1273.0], [1475.0, 1293.6666666666667], [1483.0, 1290.5], [1487.0, 6721.0], [1499.0, 8707.0], [1495.0, 3083.5], [1491.0, 3242.3333333333335], [1591.0, 4868.0], [1595.0, 5641.5], [1599.0, 6685.0], [1575.0, 7642.0], [1583.0, 8502.0], [1567.0, 5165.0], [1539.0, 8620.0], [1547.0, 9830.0], [1551.0, 7210.0], [1559.0, 5362.0], [1555.0, 8250.0], [1615.0, 5519.0], [1659.0, 4322.0], [1663.0, 6729.5], [1639.0, 10363.0], [1643.0, 8397.0], [1647.0, 10529.0], [1611.0, 4409.5], [1607.0, 6421.0], [1603.0, 7042.0], [1623.0, 6612.0], [1619.0, 9624.666666666666], [1719.0, 8470.0], [1723.0, 4917.0], [1727.0, 1228.0], [1711.0, 8511.0], [1715.0, 5435.0], [1679.0, 9143.0], [1675.0, 9840.0], [1671.0, 10198.0], [1667.0, 9712.0], [1695.0, 11047.0], [1691.0, 8393.666666666666], [1687.0, 7188.0], [1683.0, 9447.0], [1787.0, 3762.0], [1763.0, 4640.0], [1767.0, 10744.0], [1775.0, 4134.0], [1783.0, 10972.0], [1779.0, 1181.0], [1743.0, 1237.0], [1739.0, 1233.0], [1731.0, 1208.5], [1759.0, 5334.5], [1755.0, 10764.0], [1751.0, 1203.6666666666667], [1847.0, 5872.0], [1855.0, 7019.0], [1851.0, 7101.0], [1827.0, 3447.0], [1823.0, 7706.0], [1795.0, 9642.0], [1799.0, 1174.0], [1803.0, 3288.5], [1819.0, 6446.0], [1815.0, 6044.0], [1811.0, 5773.0], [1891.0, 6481.0], [1919.0, 5357.0], [1895.0, 4776.0], [1903.0, 5150.0], [1915.0, 1300.0], [1907.0, 5092.0], [1871.0, 6456.0], [1867.0, 7271.666666666667], [1971.0, 6698.5], [1975.0, 5276.333333333333], [1959.0, 5382.0], [1963.0, 8146.0], [1923.0, 4421.5], [1927.0, 5419.25], [1931.0, 4410.0], [1935.0, 5187.0], [1943.0, 3883.0], [1939.0, 6905.5], [1967.0, 3830.0], [2047.0, 5245.0], [2043.0, 5029.0], [2019.0, 6750.5], [2023.0, 4940.0], [2027.0, 5876.0], [2031.0, 9407.5], [1999.0, 7460.5], [1995.0, 9398.0], [2015.0, 5247.333333333333], [2011.0, 4206.0], [2007.0, 6994.0], [2003.0, 9701.0], [2158.0, 5187.0], [2150.0, 4323.0], [2118.0, 3191.0], [2142.0, 4714.0], [2166.0, 8601.0], [2078.0, 6982.0], [2070.0, 5410.5], [2062.0, 6782.0], [2086.0, 3325.0], [2302.0, 7569.5], [2278.0, 8696.0], [2286.0, 8470.5], [2294.0, 8585.0], [2262.0, 10141.0], [2254.0, 6561.0], [2246.0, 10393.0], [2270.0, 5595.615384615386], [2206.0, 6677.0], [2198.0, 5312.5], [2190.0, 6773.0], [2238.0, 4937.0], [2230.0, 8221.666666666666], [2222.0, 8237.0], [2318.0, 6034.0], [2422.0, 6545.0], [2374.0, 2859.0], [2382.0, 4456.0], [2390.0, 9033.0], [2398.0, 5483.0], [2310.0, 9252.0], [2358.0, 7743.0], [2350.0, 2901.0], [2342.0, 2912.0], [2334.0, 7451.0], [2326.0, 7474.0], [2406.0, 5364.0], [2430.0, 5273.0], [2438.0, 6472.0], [2167.0, 4309.0], [2119.0, 5676.0], [2175.0, 3812.6666666666665], [2127.0, 6711.0], [2079.0, 5460.0], [2063.0, 4797.0], [2055.0, 8120.5], [2095.0, 3241.0], [2087.0, 3323.0], [2287.0, 7385.4], [2279.0, 7981.333333333333], [2295.0, 3875.0], [2247.0, 6853.0], [2303.0, 5410.0], [2271.0, 5318.6], [2207.0, 9077.0], [2191.0, 3162.0], [2183.0, 4293.0], [2239.0, 3129.0], [2231.0, 5600.0], [2215.0, 7752.5], [2311.0, 6540.0], [2319.0, 6642.0], [2375.0, 5507.0], [2391.0, 8176.0], [2367.0, 7806.0], [2359.0, 2912.0], [2351.0, 2900.5], [2343.0, 2961.0], [2335.0, 7375.0], [2327.0, 8118.0], [2415.0, 6762.5], [2431.0, 4671.0], [2439.0, 5064.0], [1.0, 6814.5]], "isOverall": false, "label": "getUser", "isController": false}, {"data": [[798.7437142857118, 3146.061428571423]], "isOverall": false, "label": "getUser-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2439.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5206.25, "minX": 1.6487559E12, "maxY": 57458.63333333333, "series": [{"data": [[1.64875692E12, 47901.066666666666], [1.6487559E12, 47900.46666666667], [1.6490841E12, 57458.63333333333], [1.64875776E12, 47928.78333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64875692E12, 5208.333333333333], [1.6487559E12, 5208.333333333333], [1.6490841E12, 6250.0], [1.64875776E12, 5206.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6490841E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1059.4552000000028, "minX": 1.6487559E12, "maxY": 6604.195199999988, "series": [{"data": [[1.64875692E12, 1059.4552000000028], [1.6487559E12, 6604.195199999988], [1.6490841E12, 2403.3699999999985], [1.64875776E12, 2665.7635999999975]], "isOverall": false, "label": "getUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6490841E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1059.4043999999992, "minX": 1.6487559E12, "maxY": 6604.065600000011, "series": [{"data": [[1.64875692E12, 1059.4043999999992], [1.6487559E12, 6604.065600000011], [1.6490841E12, 2402.967666666664], [1.64875776E12, 2658.908800000004]], "isOverall": false, "label": "getUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6490841E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 907.2363999999995, "minX": 1.6487559E12, "maxY": 5839.986399999991, "series": [{"data": [[1.64875692E12, 907.2363999999995], [1.6487559E12, 5839.986399999991], [1.6490841E12, 2150.9776666666626], [1.64875776E12, 2339.076799999996]], "isOverall": false, "label": "getUser", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6490841E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 173.0, "minX": 1.6487559E12, "maxY": 13884.0, "series": [{"data": [[1.64875692E12, 6592.0], [1.6487559E12, 12441.0], [1.6490841E12, 11353.0], [1.64875776E12, 13884.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64875692E12, 2776.000000000001], [1.6487559E12, 10743.8], [1.6490841E12, 6345.700000000001], [1.64875776E12, 5466.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64875692E12, 4021.959999999999], [1.6487559E12, 12040.839999999997], [1.6490841E12, 10230.919999999998], [1.64875776E12, 11590.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64875692E12, 3287.749999999999], [1.6487559E12, 11350.8], [1.6490841E12, 8595.049999999996], [1.64875776E12, 9179.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64875692E12, 173.0], [1.6487559E12, 381.0], [1.6490841E12, 181.0], [1.64875776E12, 284.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64875692E12, 531.0], [1.6487559E12, 6526.0], [1.6490841E12, 1258.5], [1.64875776E12, 1905.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6490841E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 183.0, "minX": 1.0, "maxY": 16684.0, "series": [{"data": [[37.0, 9259.0], [580.0, 1704.0], [43.0, 183.0], [714.0, 5630.0], [746.0, 6264.0], [55.0, 9229.0], [57.0, 6036.0], [958.0, 7168.0], [91.0, 1514.0], [111.0, 2702.0], [120.0, 3245.0], [169.0, 1808.0], [174.0, 2349.5], [11.0, 3329.0], [12.0, 11526.0], [200.0, 2523.5], [221.0, 527.0], [236.0, 2955.5], [242.0, 190.0], [260.0, 1943.5], [257.0, 188.0], [16.0, 10084.0], [1.0, 5310.0], [278.0, 1681.5], [295.0, 1643.0], [291.0, 1910.0], [318.0, 1402.0], [304.0, 594.5], [354.0, 211.0], [374.0, 1111.0], [378.0, 994.0], [394.0, 925.5], [24.0, 9278.5], [25.0, 6675.0], [409.0, 332.0], [419.0, 1587.0], [445.0, 453.0], [505.0, 2173.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 16684.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 958.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 11526.0, "series": [{"data": [[37.0, 9259.0], [580.0, 1704.0], [43.0, 183.0], [714.0, 5629.5], [746.0, 6264.0], [55.0, 9229.0], [57.0, 6036.0], [958.0, 7168.0], [91.0, 1514.0], [111.0, 2702.0], [120.0, 3245.0], [169.0, 1808.0], [174.0, 2349.5], [11.0, 3329.0], [12.0, 11526.0], [200.0, 2523.5], [221.0, 527.0], [236.0, 2955.5], [242.0, 190.0], [260.0, 1943.5], [257.0, 188.0], [16.0, 10084.0], [1.0, 5310.0], [278.0, 1681.5], [295.0, 1643.0], [291.0, 1910.0], [318.0, 1402.0], [304.0, 594.5], [354.0, 211.0], [374.0, 1111.0], [378.0, 994.0], [394.0, 925.5], [24.0, 9278.5], [25.0, 6675.0], [409.0, 332.0], [419.0, 1587.0], [445.0, 453.0], [505.0, 2173.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 958.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.6487559E12, "maxY": 50.0, "series": [{"data": [[1.64875692E12, 41.666666666666664], [1.6487559E12, 41.666666666666664], [1.6490841E12, 50.0], [1.64875776E12, 41.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6490841E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6487559E12, "maxY": 50.0, "series": [{"data": [[1.64875692E12, 41.666666666666664], [1.6487559E12, 41.666666666666664], [1.6490841E12, 50.0], [1.64875776E12, 41.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64875776E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6490841E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6487559E12, "maxY": 50.0, "series": [{"data": [[1.64875692E12, 41.666666666666664], [1.6487559E12, 41.666666666666664], [1.6490841E12, 50.0], [1.64875776E12, 41.65]], "isOverall": false, "label": "getUser-success", "isController": false}, {"data": [[1.64875776E12, 0.016666666666666666]], "isOverall": false, "label": "getUser-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6490841E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.6487559E12, "maxY": 50.0, "series": [{"data": [[1.64875692E12, 41.666666666666664], [1.6487559E12, 41.666666666666664], [1.6490841E12, 50.0], [1.64875776E12, 41.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64875776E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6490841E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

